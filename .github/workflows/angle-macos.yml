name: ANGLE MacOS Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Chromium Branch Number to Build
        type: string
        required: true
        default: '6367'

env:
  ANGLE_BUILDER_OUTPUT_FOLDER: ./angle-builder-output

jobs:
  build:
    runs-on: macos-14

    strategy:
      fail-fast: false
      matrix:
        target-cpu: [x64, arm64]
        target-os: [macos]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Free Disk Space
        run: |
          chmod +x ./clean_macos_runner.sh
          ./clean_macos_runner.sh
        shell: bash

      - name: Download Depot Tools
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      - name: Prepend Depot Tools to PATH
        working-directory: depot_tools
        run: echo "$(pwd)" >> $GITHUB_PATH

      - name: Fetch ANGLE
        run: git clone https://github.com/google/angle.git angle
      - name: Checkout ANGLE Branch
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.branch != 'main' }}
        working-directory: angle
        run: git checkout origin/chromium/${{ inputs.branch }}
      - name: Bootstrap ANGLE
        working-directory: angle
        run: python scripts/bootstrap.py
      - name: Sync ANGLE
        working-directory: angle
        run: gclient sync
      - name: Configure ANGLE
        env:
          ANGLE_TARGET_CPU: ${{ matrix.target-cpu }}
          ANGLE_TARGET_OS: mac
        working-directory: angle
        run: gn gen out/Release --args="target_cpu=\"$ANGLE_TARGET_CPU\" target_os=\"$ANGLE_TARGET_OS\" is_debug=false is_component_build=false"

      # - name: Checkout angle-builder
      #   uses: actions/checkout@v4
      #   with:
      #       repository: 'kivy/angle-builder'
      #       ref: 'chromium-6367_rev1'

      # - name: Setup Python
      #   uses: actions/setup-python@v5

      # - name: Install angle-builder
      #   run: pip install .

      # - name: Build artifacts for ${{ matrix.target-os }}-${{ matrix.target-cpu }}
      #   run: angle-builder ${{ matrix.target-os }}-${{ matrix.target-cpu }} --branch chromium/${{ inputs.branch }} --artifact-output-folder $ANGLE_BUILDER_OUTPUT_FOLDER

      - name: Build
        working-directory: angle
        run: autoninja -C out/Release
      - name: Artifact Preparation
        run: |
          mkdir output
          ls -R angle/out/Release
          cp angle/out/Release/libEGL.dylib output/libEGL.dylib
          cp angle/out/Release/libGLESv2.dylib output/libGLESv2.dylib
          cp angle/out/Release/libvk_swiftshader.dylib output/libvk_swiftshader.dylib
          # cp angle/out/Release/libvulkan.dylib output/libvulkan.dylib
          cp angle/out/Release/vk_swiftshader_icd.json output/vk_swiftshader_icd.json
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-${{ matrix.target-cpu }}-${{ matrix.target-os }}
          path: output/
          retention-days: 1
